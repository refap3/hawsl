# generate BANNER here: 
# http://patorjk.com/software/taag

#   _   _     _         _       _    _ ____  _    _ _   _ _______ _    _             _____ _____ _______ _    _ _    _ ____     _ _ 
#  | | | |   (_)       (_)     | |  | |  _ \| |  | | \ | |__   __| |  | |     ____  / ____|_   _|__   __| |  | | |  | |  _ \   | | |
#  | |_| |__  _ ___     _ ___  | |  | | |_) | |  | |  \| |  | |  | |  | |    / __ \| |  __  | |    | |  | |__| | |  | | |_) |  | | |
#  | __| '_ \| / __|   | / __| | |  | |  _ <| |  | | . ` |  | |  | |  | |   / / _` | | |_ | | |    | |  |  __  | |  | |  _ <   | | |
#  | |_| | | | \__ \   | \__ \ | |__| | |_) | |__| | |\  |  | |  | |__| |  | | (_| | |__| |_| |_   | |  | |  | | |__| | |_) |  |_|_|
#   \__|_| |_|_|___/   |_|___/  \____/|____/ \____/|_| \_|  |_|   \____/    \ \__,_|\_____|_____|  |_|  |_|  |_|\____/|____/   (_|_)
#                                                                            \____/                                                 
                                                                                                                                  
# # # note: Github location is 
# # # https://github.com/refap3/hawsl


# # # how to update Homeassistant: 
# ===================================

# # # $ python3 -m pip install --upgrade homeassistant  

# ALL FILES are now local on C:\ drive and accessed via /mnt/c !!
# ---------------------------------------------------------------
# ===============================================================

homeassistant:
  # Name of the location where Home Assistant is running
  name: UBUNTU/Windows Test FARM
  # Location required to calculate the time the sun rises and sets
  latitude: 48.193182
  longitude: 16.360460
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 120
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Vienna
  # Customization file
  customize: !include customize.yaml 



# change Theme !!
frontend:
  themes:
    happy:
      primary-color: pink
    sad:
      primary-color: blue
    dark:
      primary-color: black

# Enables configuration UI
config:

updater:

# Discover some devices automatically
discovery:
  ignore:
  - apple_tv
  - axis
  - belkin_wemo
  - bluesound
  - bose_soundtouch
  - denonavr
  - directv
  - frontier_silicon
  - google_cast
  - harmony
  - ikea_tradfri
  - logitech_mediaserver
  - netgear_router
  - openhome
  - panasonic_viera
  - philips_hue
  - plex_mediaserver
  - roku
  - sabnzbd
  - samsung_printer
  - samsung_tv
  - sonos
  - songpal 
  - tellstick
  - wink
  - yamaha
  - yeelight
  - xiaomi_gw  

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:
sensor:

- platform: template
  sensors:
    vz_light_daytime:
      friendly_name: 'VZ light daytime '
      value_template: >-
        {% set o = 'day' %}
        {% if (states.sun.sun.attributes.elevation | int < 4 )   %}
          {% if ( states('sensor.time') >= '14:30' and states('sensor.time') < '22:30' ) %}
            {% set o = 'evening' %}
          {% elif ( states('sensor.time') >= '06:30' and states('sensor.time') < '09:30' ) %}
            {% set o = 'morning' %}
          {% else %}
            {% set o = 'night' %}
          {% endif %}
        {% endif %}
            {{ o }}    

- platform: template
  sensors:
    presence:
      friendly_name: 'Presence Sensor'
      value_template: >-
        {% set o = 'home' %}
        {% if states('input_select.forcepresencesimulation')  == 'True' %}
          {% set o = 'not_home' %}
        {% else %}
          {% if ( (states('input_number.pres_counter') | int == 1 ) and (states('sensor.vz_light_daytime') == 'evening' )  ) %}
            {% if ( (states('group.people')  == 'not_home' ) and (states('input_select.presenceenabled') == 'True' )  ) %}
              {% set o = 'not_home' %}
            {% endif %}
          {% endif %}
        {% endif %}
        {{ o }}    

- platform: template
  sensors:
    presence2:
      friendly_name: 'Presence Sensor2'
      value_template: >-
        {% set o = 'home' %}
        {% if states('input_select.forcepresencesimulation')  == 'True' %}
          {% set o = 'not_home' %}
        {% else %}
          {% if ( (states('input_number.pres_counter') | int == 1 ) and (states('sensor.vz_light_daytime') == 'day' )  ) %}
            {% if ( (states('group.people')  == 'home' ) and (states('input_select.presenceenabled') == 'True' )  ) %}
              {% set o = 'not_home' %}
            {% endif %}
          {% endif %}
        {% endif %}
        {{ o }}    

# HUE dimmer button and last changed 
- platform: rest 
  resource: http://192.168.1.29/api/afuqJ7LmBQWbHTQ0qKtGvuokd3y77SiJNw0BNkMy/sensors/7
  name: DIMMERbuttonevent
  value_template: '{{ value_json.state.buttonevent }}' 
  scan_interval: 1 

- platform: rest 
  resource: http://192.168.1.29/api/afuqJ7LmBQWbHTQ0qKtGvuokd3y77SiJNw0BNkMy/sensors/7
  name: DIMMERlastupdated
  value_template: '{{ value_json.state.lastupdated }}' 
  scan_interval: 1 


# HUE dimmer battery level 
- platform: rest 
  resource: http://192.168.1.29/api/afuqJ7LmBQWbHTQ0qKtGvuokd3y77SiJNw0BNkMy/sensors/7
  name: DIMMERbattery
  value_template: '{{ value_json.config.battery }}' 
  scan_interval: 1 

## HUE daylight boolean
- platform: rest 
  resource: http://192.168.1.29/api/afuqJ7LmBQWbHTQ0qKtGvuokd3y77SiJNw0BNkMy/sensors/1
  name: HUEdaylight
  value_template: '{{ value_json.state.daylight }}' 
  scan_interval: 1 

## HUE TAP switch 
- platform: rest 
  resource: http://192.168.1.29/api/afuqJ7LmBQWbHTQ0qKtGvuokd3y77SiJNw0BNkMy/sensors/22
  name: TAPbuttonevent
  value_template: '{{ value_json.state.buttonevent }}' 
  scan_interval: 1 

## get EXTERNAL IP 
- platform: rest
  resource: http://ip.jsontest.com
  name: External IP
  value_template: '{{ value_json.ip }}'

- platform: template 
  sensors:  
   living_room_remote_status: 
     friendly_name: 'Living room remote' 
     value_template: '{{states.sensor.DIMMERbuttonevent.state[0]}}'  
   
- platform: template 
  sensors:  
   full_living_room_remote_status: 
     friendly_name: 'FULL Living room remote' 
     value_template: '{{states.sensor.DIMMERbuttonevent.state}}'  
   
## fetch Multiple values and present as attributes
- platform: rest
  name: JSON time
  json_attributes:
    - date
    - milliseconds_since_epoch
  resource: http://date.jsontest.com/
  value_template: '{{ value_json.time }}'
- platform: template
  sensors:
    date:
      friendly_name: 'Date'
      value_template: '{{ states.sensor.json_time.attributes["date"] }}'
    milliseconds:
      friendly_name: 'milliseconds'
      value_template: '{{ states.sensor.json_time.attributes["milliseconds_since_epoch"] }}'

- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_iso'
    - 'time_date'
    - 'time_utc'
    - 'beat'

# give SUN
sun:

# device tracker ... 

device_tracker:
  - platform: ping
    interval_seconds: 20
    consider_home: 60
    hosts:
      rai_ph: 192.168.1.67
      lis_ph: 192.168.1.54


input_select:
  presenceenabled:
    name: Presence detection enabled 
    options:
     - true
     - false
    initial: true
    icon: mdi:human-male-female        

  forcepresencesimulation:
    name: FORCE Presence simulation
    options:
     - true
     - false
    initial: false
    icon: mdi:human-male-female        

input_number:
  pres_counter:
    name: Presence counter emulation 
    initial: 0
    min: 0
    max: 5
    icon: "mdi:brightness-5"   

# pushbullet

notify:
  platform: pushbullet
  name: pushbullet
  api_key: !secret pushbullet_api

counter:
  pres_simul_exec_counter:
    initial: 0
    step: 1
    name: Number of Presence Simulations executed

## enable python scripts in folder python_scripts
python_script:



group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml


light:
  - platform: osramlightify
    host: 192.168.1.16    
switch:
  - platform: wake_on_lan
    name: DSS
    mac_address: "D0:50:99:2F:69:46"      
    host: 192.168.1.31
    turn_off:
      service: shell_command.turn_off_dss
  - platform: wake_on_lan
    name: SS
    mac_address: "BC:AE:C5:57:2C:13"      
    host: 192.168.1.48
    turn_off:
      service: shell_command.turn_off_ss
  - platform: wake_on_lan             #  dunno if this focca WOLs !
    name: AI
    mac_address: "00:15:17:D4:8B:BA"      
    host: 192.168.1.44
    turn_off:
      service: shell_command.turn_off_ai

  - platform: wake_on_lan             #  dunno if this focca WOLs !
    name: A10
    mac_address: "30:9C:23:84:CD:3D"      
    host: 192.168.1.30
    turn_off:
      service: shell_command.turn_off_a10


  - platform: wake_on_lan             
    name: BU
    mac_address: "94:18:82:37:27:0C"      
    host: 192.168.1.41
    turn_off:
      service: shell_command.turn_off_bu

#  RoonEP does not support WOL -- is eh wurscht!

  - platform: wake_on_lan             
    name: ROCK
    mac_address: "94:C6:91:A8:78:D8"      
    host: 192.168.1.63
    turn_off:
      service: shell_command.turn_off_rock

  - platform: wake_on_lan             
    name: RoonEPnoWOL
    mac_address: "b8:27:eb:24:76:3b"      
    host: 192.168.1.79
    turn_off:
      service: shell_command.turn_off_roonep


# next sequence turns off real switch after shutdown too !

# migrate this to A10 too !!
  - platform: template
    switches:
      aiemulated:
        friendly_name: "AIemulatedSWITCH"
        value_template: "{{ states.switch.AI.state }}"
        turn_on:
          - service: light.turn_off
            data:
              entity_id: light.plug_02
          - delay: 00:00:05
          - service: light.turn_on
            data:
              entity_id: light.plug_02
        turn_off:
          - service: switch.turn_off
            data:
              entity_id: switch.AI
          - wait_template:  '{{ states.switch.AI.state == ''off'' }}'
            timeout: 00:01:00
          - delay: 00:00:10
          - service: light.turn_off
            data:
              entity_id: light.plug_02                    
      a10emulated:
        friendly_name: "A10emulatedSWITCH"
        value_template: "{{ states.switch.A10.state }}" 
        turn_on:
          - service: light.turn_off
            data:
              entity_id: light.plug_03
          - delay: 00:00:05
          - service: light.turn_on
            data:
              entity_id: light.plug_03
        turn_off:
          - service: switch.turn_off
            data:
              entity_id: switch.A10
          - wait_template:  '{{ states.switch.A10.state == ''off'' }}'
            timeout: 00:01:00
          - delay: 00:00:10
          - service: light.turn_off
            data:
              entity_id: light.plug_03         


# bloody wol does not work on A10 -- dunno Y
shell_command:
  # shutdown_z800: 'curl -k http://192.168.1.59:7760/forcepoweroff'
  # restart_z800: 'curl -k  http://192.168.1.59:7760/reboot'
  # lock_z800: 'curl -k  http://192.168.1.59:7760/lock'
#  turn_off_dss: 'curl -k  http://192.168.1.31:7760/forcepoweroff'
  turn_off_dss: 'curl -k  "http://wol.ssb8.local/wol/tasker.aspx?id=5&op=shut"'
  turn_off_ss: 'curl -k   "http://wol.ssb8.local/wol/tasker.aspx?id=22&op=shut"'
  turn_off_ai: 'curl -k   "http://wol.ssb8.local/wol/tasker.aspx?id=25&op=shut"'
  turn_off_bu:  'curl -k   "http://wol.ssb8.local/wol/tasker.aspx?id=24&op=shut"'
  turn_off_a10: 'curl -k   http://a10.ssb8.local:7760/forcepoweroff'
  turn_off_roonep: "ssh -i /config/ssh/id_rsa -o StrictHostKeyChecking=no root@192.168.1.79 'shutdown -h now'"
  turn_off_rock: 'curl -k  http://192.168.1.63/1/poweroff' # got this from internet 
